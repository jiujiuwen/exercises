
1、操作系统多进程多线程
（又看了下操作系统进程和线程那章...但是仍然还是不确定答案...）
操作系统系统采用多进程多线程应该是为了提高并发，充分利用资源。
cpu调度的最小单位是线程，
如果采用单进程多线程的模式，加入某个线程有多个任务，就只能执行那一个任务，如果还是一个会发生I/O的任务，
就会被阻塞，就不能执行其他任务。（比如，需要编辑一个word文档，就只能一直处于编辑状态，不能去读其他文件。）
这样的操作系统就会很慢，而且还会浪费cpu资源。

2、协程
同一个线程下的多个任务，不由系统进行调度，由用户控制；
gevent可以实现协程间的自动切换，通过主协程进行调度；
gevent中socket设置为了非阻塞，通过while循环会在connect时等待可读事件，send时等待可写事件，recv时等待可读事件



3、cli
command-line interface，
关于这个，虽然找了资料，但是仍然不知道top那个动态状态怎么实现的，可能我的无知导致找的方向不对...
能提示下吗..或者允许我问问其他人..感谢.

4、gevent 聊天室
这个后来也有改，但是最后还是要自己判断可读可写...感觉没有用到gevent的自动切换
如果client想在recv和send之间切换，不是这么用的吗...如果我不自己判断可读可写，会一直处于recv或者send..
上次问能不能运行，是不是我方向都不对...能提示下怎么改吗...感谢.

5、问题
关于数据结构，算法有在看，问题还是不会应用...

感谢。
